import sys
from PySide6.QtWidgets import QApplication, QWidget, QPushButton
from PySide6.QtUiTools import QUiLoader
from PySide6.QtCore import QFile
from patient_register_ui import Ui_Form as Ui_PatientRegister
from daily_entry_form_end_ui import Ui_Form as Ui_DailyEntryForm
from monthly_analysis import MonthlyAnalysisWindow
from generate_report_window import GenerateReportWindow


class PatientRegisterForm(QWidget):
    def __init__(self):
        super().__init__()
        self.ui = Ui_PatientRegister()
        self.ui.setupUi(self)
        self.setWindowTitle("Patient Registration")

class DailyEntryForm(QWidget):
    def __init__(self):
        super().__init__()
        self.ui = Ui_DailyEntryForm()
        self.ui.setupUi(self)
        self.setWindowTitle("Daily Entry")

class MainMenu(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Main Menu")
        loader = QUiLoader()
        ui_file = QFile("ui/main_menu.ui")
        ui_file.open(QFile.ReadOnly)
        self.ui = loader.load(ui_file, self)
        ui_file.close()


        self.btn_daily_entry = self.ui.findChild(QPushButton, "btn_daily_entry")
        self.btn_monthly_analysis = self.ui.findChild(QPushButton, "btn_monthly_analysis")
        self.btn_treatment_report = self.ui.findChild(QPushButton, "btn_treatment_report")
        self.btn_logout = self.ui.findChild(QPushButton, "btn_logout")

        self.btn_daily_entry.clicked.connect(self.open_daily_entry)
        self.btn_monthly_analysis.clicked.connect(self.open_monthly_analysis)
        self.btn_treatment_report.clicked.connect(self.open_treatment_report)
        self.btn_logout.clicked.connect(self.logout)
    def open_register_form(self):
        self.register_window = PatientRegisterForm()
        self.register_window.show()

    def open_daily_entry(self):
        self.daily_window = DailyEntryForm()
        self.daily_window.show()

    def open_monthly_analysis(self):
        self.analysis_window = MonthlyAnalysisWindow()
        self.analysis_window.show()

    def open_treatment_report(self):
        self.report_window = GenerateReportWindow()
        self.report_window.show()
    
    def logout(self):
        self.close()  # Veya ana menüyü kapatmak yerine login ekranı gibi başka pencere açılabilir

